{
  "name": "dashboard-react",
  "homepage": ".",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@botui/react": "^1.1.5",
    "@clientio/rappid": "file:vendor/rappid_v3_6_1.tar.gz",
    "@craco/craco": "^6.3.0",
    "@fortawesome/fontawesome-common-types": "^0.2.36",
    "@fortawesome/fontawesome-pro": "^6.0.0-beta3",
    "@fortawesome/fontawesome-svg-core": "^1.2.36",
    "@fortawesome/free-regular-svg-icons": "^5.15.4",
    "@fortawesome/free-solid-svg-icons": "^5.15.4",
    "@fortawesome/pro-regular-svg-icons": "^5.15.4",
    "@fortawesome/pro-solid-svg-icons": "^6.0.0",
    "@fortawesome/pro-thin-svg-icons": "^6.2.0",
    "@fortawesome/react-fontawesome": "^0.1.16",
    "@react-pdf-viewer/core": "^3.6.0",
    "@react-pdf-viewer/default-layout": "^3.6.0",
    "@react-pdf-viewer/highlight": "^3.6.0",
    "@reduxjs/toolkit": "^1.5.1",
    "@sentry/browser": "^7.15.0",
    "@sentry/react": "^7.15.0",
    "@sentry/rrweb": "^0.3.3",
    "@sentry/tracing": "^7.15.0",
    "@storybook/addon-queryparams": "^6.2.9",
    "@tinymce/tinymce-react": "^4.2.0",
    "@types/react-pdf": "^5.7.2",
    "@ushurengg/uicomponents": "0.2.87",
    "@wojtekmaj/react-daterange-picker": "^3.3.2",
    "awesome-phonenumber": "^4.1.0",
    "bootstrap": "^5.1.1",
    "bootstrap-daterangepicker": "^3.1.0",
    "botui": "^1.1.3",
    "date-fns": "^2.0.0-beta.5",
    "export-from-json": "^1.4.1",
    "fontawesome-pro-regular-svg-icons": "npm:@fortawesome/pro-regular-svg-icons@^6.2.0",
    "fs-extra": "^10.1.0",
    "html-react-parser": "^3.0.4",
    "http-status-codes": "^2.2.0",
    "i18next": "^22.0.6",
    "isomorphic-fetch": "^3.0.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.1",
    "multiselect-react-dropdown": "^2.0.25",
    "pdfjs-dist": "^2.16.105",
    "react": "^17.0.2",
    "react-beautiful-dnd": "^13.1.1",
    "react-bootstrap": "^2.0.0-rc.0",
    "react-bootstrap-daterangepicker": "^7.0.0",
    "react-bootstrap-icons": "^1.6.1",
    "react-contenteditable": "^3.3.6",
    "react-date-range": "^1.4.0",
    "react-dom": "^17.0.2",
    "react-drag-drop-container-typescript": "^1.4.1",
    "react-error-boundary": "^3.1.4",
    "react-highlight-words": "^0.18.0",
    "react-i18next": "^12.0.0",
    "react-pdf": "^5.7.2",
    "react-phone-input-2": "^2.14.0",
    "react-redux": "^7.2.0",
    "react-reflex": "^4.0.9",
    "react-router-dom": "^5.3.0",
    "react-scripts": "4.0.3",
    "react-select": "^5.7.0",
    "rrweb": "^2.0.0-alpha.3",
    "sanitize-html": "^2.7.3",
    "sass": "^1.56.1",
    "source-map-explorer": "^2.5.2",
    "tinymce": "^6.2.0",
    "userpilot": "^1.2.5",
    "uuid": "^9.0.0",
    "worker-loader": "^3.0.8"
  },
  "scripts": {
    "analyze": "npm run build && source-map-explorer 'build/static/js/*.js'",
    "generate:toc": "doctoc README.md",
    "generate:api": "swagger-codegen generate -i openapi/ushur.yaml -l typescript-fetch  -o src/api -c swagger-config.json && rimraf src/api/api_test.spec.ts",
    "start": "craco start",
    "start:msw": "cross-env REACT_APP_MOCK_SERVER=MSW craco start",
    "start:msw:ci": "cross-env REACT_APP_CI=1 REACT_APP_INSTRUMENT_CODE=1 BROWSER=none REACT_APP_MOCK_SERVER=MSW craco start",
    "build": "cross-env CI=false craco --max_old_space_size=4096 build",
    "pre-push": "npx prepush-if-changed",
    "pre-commit": "npx lint-staged || echo 'Please note linter issues.' && eslint --max-warnings=0 \"src/features/canvas\" && eslint --max-warnings=0 \"src/mocks\"",
    "pre-commit-fix": "npx lint-staged || echo 'Please note linter issues.' && eslint --max-warnings=0 \"src/features/canvas\" --fix && eslint --max-warnings=0 \"src/mocks\" --fix",
    "test": "craco test --maxWorkers=1",
    "test:coverage:bump": "ts-node ./scripts/coverage-bump.ts",
    "test:ci": "npm run test:coverage && npx playwright install-deps && npm run test:e2e:ci && npm run test:bdd:ci && npm run test:storybook:ci",
    "test:coverage": "craco test --silent --coverage --watchAll=false --maxWorkers=1 && npm run test:coverage:bump -- --type component",
    "test-once": "npm test -- --watchAll=false --maxWorkers=1",
    "test:bdd": "npx mkdirp tests/reports && cross-env TS_NODE_PROJECT=./tests/tsconfig.json cucumber-js --retry 3 --format progress-bar --format html:tests/reports/cucumber-report.html --publish-quiet tests/features/**/*.feature --require-module ts-node/register --require tests/support/**/*.ts --require tests/steps/**/*.ts",
    "test:bdd:live": "cross-env HEADED=1 npm run test:bdd",
    "test:bdd:debug": "cross-env PWDEBUG=1 npm run test:bdd",
    "test:bdd:video": "cross-env PWVIDEO=1 npm run test:bdd",
    "test:bdd:coverage": "rimraf coverage .nyc_output_bdd && npx mkdirp tests/reports && cross-env TS_NODE_PROJECT=./tests/tsconfig.json cucumber-js --parallel 1 --retry 3 --format progress-bar --format html:tests/reports/cucumber-report.html --publish-quiet tests/features/**/*.feature --require-module ts-node/register --require tests/support/**/*.ts --require tests/steps/**/*.ts && npm run test:bdd:coverage-threshold",
    "test:bdd:coverage-threshold": "nyc --nycrc-path .nycrc.bdd.json report --reporter html --reporter text --reporter json-summary -t .nyc_output_bdd --report-dir coverage/bdd",
    "test:bdd:ci": "start-server-and-test start:msw:ci http://localhost:3000 test:bdd:coverage && npm run test:coverage:bump -- --type bdd",
    "test:bdd:watch": "chokidar tests src -i tests/reports",
    "test:bdd:codegen": "npx playwright codegen http://localhost:3000",
    "test:e2e": "playwright test tests --project=chromium",
    "test:e2e:live": "npm run test:e2e -- --headed",
    "test:e2e:debug": "npm run test:e2e -- --debug",
    "test:e2e:coverage": "rimraf coverage .nyc_output_e2e && npx mkdirp '.nyc_output_e2e' && cross-env ISTANBUL_TEMP_DIR='./.nyc_output_e2e' REACT_APP_INSTRUMENT_CODE=1 npx playwright test tests --project=chromium && npm run test:e2e:coverage-threshold",
    "test:e2e:coverage-threshold": "npx nyc --nycrc-path .nycrc.e2e.json report --reporter html --reporter text --reporter json-summary -t .nyc_output_e2e --report-dir coverage/e2e",
    "test:e2e:ci": "npm run test:e2e:coverage && npm run test:coverage:bump -- --type e2e",
    "test:e2e:watch": "chokidar 'tests/**/*.ts' -c 'npm run test:e2e -- --retries=0 {path}'",
    "test:e2e:watch:live": "chokidar 'tests/**/*.ts' -c 'npm run test:e2e:live -- --retries=0 {path}'",
    "test:e2e:codegen": "npx playwright codegen http://localhost:3000",
    "test:storybook": "cross-env REACT_APP_MOCK_SERVER=MSW test-storybook --maxWorkers=2 --verbose --browsers chromium firefox webkit",
    "test:storybook:ci": "start-server-and-test storybook:ci http://localhost:6006 test:storybook",
    "test:storybook-watch": "cross-env REACT_APP_MOCK_SERVER=MSW test-storybook --watch --verbose",
    "lint": "eslint \"src/**/*.{js,jsx,ts,tsx}\"",
    "lint:ci": "eslint --max-warnings=0 \"src/features/canvas\" && eslint --max-warnings=0 \"src/mocks\" && eslint --max-warnings=0 \"scripts\"",
    "lint:fix": "eslint \"src/**/*.{js,jsx,ts,tsx}\" --fix",
    "format": "prettier -w .",
    "tsc": "cross-env echo 'Checking for TypeScript errors' && tsc --noEmit --pretty",
    "__mock": "json-server --port 3030 --watch json-server/db.json",
    "mock": "json-server -p 3030 -w json-server/db.json -s ./node_modules/json-server/public",
    "eject": "react-scripts eject",
    "storybook": "cross-env REACT_APP_MOCK_SERVER=MSW start-storybook --quiet -p 6006 -s public",
    "storybook:ci": "cross-env BROWSER=none npm run storybook",
    "build-storybook": "cross-env REACT_APP_MOCK_SERVER=MSW REACT_APP_CANVAS2_USE_LEGACY_WORKFLOW_API=true build-storybook --quiet -s public",
    "chromatic": "npx chromatic",
    "prepare": "cd .. && husky install ushur-ui/.husky",
    "preinstall": "npx npm-force-resolutions",
    "postinstall": "node ./postinstall.js"
  },
  "eslintConfig": {
    "extends": "react-app",
    "overrides": [
      {
        "files": [
          "**/*.stories.*"
        ],
        "rules": {
          "import/no-anonymous-default-export": "off"
        }
      }
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      ">0.2%",
      "not dead",
      "not op_mini all",
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/preset-typescript": "^7.18.6",
    "@cucumber/cucumber": "^8.9.1",
    "@cucumber/messages": "^21.0.1",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@playwright/test": "^1.29.1",
    "@sentry/typescript": "^5.20.1",
    "@storybook/addon-a11y": "^6.5.9",
    "@storybook/addon-actions": "^6.5.9",
    "@storybook/addon-essentials": "^6.5.9",
    "@storybook/addon-interactions": "^6.5.9",
    "@storybook/addon-links": "^6.5.9",
    "@storybook/builder-webpack4": "^6.5.9",
    "@storybook/manager-webpack4": "^6.5.9",
    "@storybook/node-logger": "^6.5.9",
    "@storybook/preset-create-react-app": "^3.2.0",
    "@storybook/react": "^6.5.9",
    "@storybook/test-runner": "^0.1.1",
    "@storybook/testing-library": "0.0.13",
    "@storybook/testing-react": "^1.3.0",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^12.1.5",
    "@testing-library/react-hooks": "^8.0.0",
    "@testing-library/user-event": "^14.2.0",
    "@types/backbone": "^1.4.15",
    "@types/jest": "^24.0.0",
    "@types/jquery": "^3.5.14",
    "@types/lodash": "^4.14.176",
    "@types/node": "^12.0.0",
    "@types/pdfjs-dist": "^2.10.378",
    "@types/react": "^16.9.0",
    "@types/react-beautiful-dnd": "^13.1.2",
    "@types/react-dom": "^16.9.0",
    "@types/react-highlight-words": "^0.16.4",
    "@types/react-pdf": "^5.7.2",
    "@types/react-redux": "^7.1.7",
    "@types/react-router-dom": "^5.3.0",
    "@types/sanitize-html": "^2.6.2",
    "@types/yargs": "^17.0.13",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^5.30.0",
    "autoprefixer": "^9.8.8",
    "axe-playwright": "^1.1.12",
    "babel-plugin-istanbul": "^6.1.1",
    "chokidar-cli": "^3.0.0",
    "chromatic": "^6.5.6",
    "cross-env": "^7.0.3",
    "doctoc": "^2.2.1",
    "eslint": "^7.32.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.1.3",
    "eslint-plugin-jsdoc": "^38.1.6",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-spellcheck": "0.0.19",
    "eslint-plugin-storybook": "^0.5.13",
    "fishery": "^2.2.2",
    "husky": "^8.0.1",
    "jest-watch-typeahead": "^0.6.5",
    "json-server": "^0.16.3",
    "lint-staged": "^13.0.3",
    "mockdate": "^3.0.5",
    "msw": "0.42.3",
    "msw-storybook-addon": "^1.6.3",
    "nyc": "^15.1.0",
    "playwright": "^1.29.1",
    "playwright-test-coverage": "^1.1.0",
    "postcss": "^8.2.13",
    "prepush-if-changed": "^1.0.8",
    "prettier": "^2.4.1",
    "react-error-overlay": "6.0.9",
    "rimraf": "^3.0.2",
    "source-map-support": "^0.5.21",
    "start-server-and-test": "^1.14.0",
    "storybook-addon-designs": "^6.3.1",
    "string.prototype.replaceall": "^1.0.6",
    "tailwindcss": "npm:@tailwindcss/postcss7-compat@^2.2.17",
    "typescript": "~4.1.5",
    "yargs": "^17.6.1",
    "zip-to-tar": "^3.0.0"
  },
  "resolutions": {
    "react-error-overlay": "6.0.9"
  },
  "jest": {
    "restoreMocks": true,
    "moduleNameMapper": {
      "pdfjs-dist": "<rootDir>/node_modules/pdfjs-dist/legacy/build/pdf",
      "@botui": "<rootDir>/node_modules/@botui/react/dist/index.js",
      "botui": "<rootDir>/node_modules/botui/dist/botui.js"
    },
    "transformIgnorePatterns": [
      "node_modules/(?!(@ushurengg/uicomponents|botui|@botui))/"
    ],
    "coverageReporters": [
      "json-summary",
      "lcov"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 10.69,
        "branches": 4.59,
        "functions": 8.58,
        "lines": 10.63
      },
      "src/features/canvas": {
        "statements": 54.95,
        "branches": 41.14,
        "functions": 47.52,
        "lines": 54.97
      }
    },
    "coveragePathIgnorePatterns": [
      "<rootDir>/src/api/",
      "<rootDir>/src/mocks/",
      "<rootDir>/src/types/",
      "<rootDir>/node_modules/",
      "^.*\\.stories\\.[jt]sx?$"
    ]
  },
  "prepush-if-changed": {
    "src/**/*.ts?(x)": "npm run tsc && npm run test:coverage"
  },
  "msw": {
    "workerDirectory": "public"
  }
}
